{"version":3,"sources":["index.js"],"names":["Quotes","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","style","color","this","props","id","quote","author","React","Component","QuotesBox","_this","Object","E_Github_random_quote_machine_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","E_Github_random_quote_machine_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","E_Github_random_quote_machine_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","isClick","colors","quotes","handleClick","bind","E_Github_random_quote_machine_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","setState","Math","floor","random","length","href","backgroundColor","onClick","ReactDOM","render","document","getElementById"],"mappings":"8KAMMA,sMAEF,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBC,MAAO,CAACC,MAAOC,KAAKC,MAAMF,QACzDL,EAAAC,EAAAC,cAAA,OAAKM,GAAG,QAAOR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAA5B,IAAqDG,KAAKC,MAAME,OAChET,EAAAC,EAAAC,cAAA,OAAKM,GAAG,SAASL,UAAU,cAA3B,KAA2CG,KAAKC,MAAMG,gBALvCC,IAAMC,YAUrBC,cACJ,SAAAA,EAAYN,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAT,KAAAO,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAT,KAAAS,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAb,KAAMC,KACDa,MAAQ,CACXC,SAAS,EACTC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEC,OAAQ,CAAC,CACRd,MAAQ,8EAAoEC,OAAS,eAC5F,CACOD,MAAQ,qEAAqEC,OAAS,iBAC7F,CACOD,MAAQ,yDAAyDC,OAAS,mBACjF,CACOD,MAAQ,kHAA6GC,OAAS,gBACrI,CACOD,MAAQ,mEAAmEC,OAAS,wBAC3F,CACOD,MAAQ,kDAA6CC,OAAS,mBAEjEI,EAAKU,YAAcV,EAAKU,YAAYC,KAAjBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAlBFA,6EAqBjBR,KAAKqB,SAAS,CAACN,SAAUf,KAAKc,MAAMC,2CAGpC,IAAMZ,EAAQH,KAAKc,MAAMG,OAAOK,KAAKC,MAAMD,KAAKE,SAAWxB,KAAKc,MAAMG,OAAOQ,SACvE1B,EAAQC,KAAKc,MAAME,OAAOM,KAAKC,MAAMD,KAAKE,SAAWxB,KAAKc,MAAME,OAAOS,SACvEC,EAAO,0CAAiDvB,EAAMA,MAAQ,KAAOA,EAAMC,OACzF,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,MAAO,CAAC6B,gBAAiB5B,IACjDL,EAAAC,EAAAC,cAAA,OAAKM,GAAG,aACNR,EAAAC,EAAAC,cAACH,EAAD,CAAQU,MAAOA,EAAMA,MAAOC,OAAQD,EAAMC,OAAQL,MAAOA,IACzDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGM,GAAG,YAAYL,UAAU,kBAAkB+B,QAAS5B,KAAKkB,YAAapB,MAAO,CAAC6B,gBAAiB5B,EAAOA,MAAO,UAAhH,aACAL,EAAAC,EAAAC,cAAA,KAAGM,GAAG,cAAcwB,KAAMA,EAAM7B,UAAU,kBAAkBC,MAAO,CAAC6B,gBAAiB5B,EAAOA,MAAO,UAAUL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAlC9GQ,IAAMC,WA0C9BuB,IAASC,OAAOpC,EAAAC,EAAAC,cAACW,EAAD,MAAewB,SAASC,eAAe","file":"static/js/main.0a9e32b5.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nclass Quotes extends React.Component {\n  render() {\n    return (\n    <div className=\"text-author-box\" style={{color: this.props.color}}>\n      <div id=\"text\"><i className=\"fa fa-quote-left\"></i> {this.props.quote}</div>\n      <div id=\"author\" className=\"text-right\">- {this.props.author}</div>  \n    </div>\n    );\n  }\n}\nclass QuotesBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClick: false,\n      colors: [\"#008080\", \"#2F4F4F\", \"#8A2BE2\", \"#6495ED\", \"#FF7F50\", \"#FF1493\"],\n      quotes: [{\n       \"quote\":\"Life isn’t about getting and having, it’s about giving and being.\",\"author\":\"Kevin Kruse\"},\n{\n       \"quote\":\"Whatever the mind of man can conceive and believe, it can achieve.\",\"author\":\"Napoleon Hill\"},\n{\n       \"quote\":\"Strive not to be a success, but rather to be of value.\",\"author\":\"Albert Einstein\"},\n{\n       \"quote\":\"Two roads diverged in a wood, and I—I took the one less traveled by, And that has made all the difference.\",\"author\":\"Robert Frost\"},\n{\n       \"quote\":\"I attribute my success to this: I never gave or took any excuse.\",\"author\":\"Florence Nightingale\"},\n{\n       \"quote\":\"You miss 100% of the shots you don’t take.\",\"author\":\"Wayne Gretzky\"}]\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    this.setState({isClick: !this.state.isClick});\n  }\n  render() {\n    const quote = this.state.quotes[Math.floor(Math.random() * this.state.quotes.length)];\n    const color = this.state.colors[Math.floor(Math.random() * this.state.colors.length)];\n    const href = \"https://twitter.com/intent/tweet?text=\" + '\"' + quote.quote + '\" ' + quote.author;\n    return (\n      <div className=\"full-box\" style={{backgroundColor: color}}>\n        <div id=\"quote-box\">\n          <Quotes quote={quote.quote} author={quote.author} color={color}/>\n          <div className=\"button\">\n            <a id=\"new-quote\" className=\"btn btn-default\" onClick={this.handleClick} style={{backgroundColor: color, color: 'white'}}>New quote</a>\n            <a id=\"tweet-quote\" href={href} className=\"btn btn-default\" style={{backgroundColor: color, color: 'white'}}><i className=\"fa fa-twitter\"></i></a>\n          </div>\n        </div>        \n      </div>\n    );\n  }\n}\n\nReactDOM.render(<QuotesBox />, document.getElementById('root'));"],"sourceRoot":""}